// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the ShowerHandler class.
//

namespace Pythia7 {

inline ShowerHandler::ShowerHandler()
  : theShowerModel(0), addFSROnISR(true), theFullHistory(false),
    maxTries(1000) {}

inline ShowerHandler::ShowerHandler(const ShowerHandler & x)
  : CascadeHandler(x), theShowerModel(0), theTimeShower(x.theTimeShower),
    theSpaceShower(x.theSpaceShower), addFSROnISR(x.addFSROnISR),
    theFullHistory(x.theFullHistory), maxTries(x.maxTries) {}

inline bool ShowerHandler::history() const {
  return theFullHistory;
}

inline IBPtr ShowerHandler::clone() const {
  return new_ptr(*this);
}

inline IBPtr ShowerHandler::fullclone() const {
  return new_ptr(*this);
}

inline void ShowerHandler::doupdate() throw(UpdateException) {
  CascadeHandler::doupdate();
  // First update base class.
  bool redo = touched();
  // redo if touched.
//  UpdateChecker::check(aDependentMember, redo);
  // Update referenced objects on which this depends redo is set to true
  // if the dependent object is touched.
//  for_each(ContainerOfDependencies, UpdateChecker(redo));
  // Update a container of references.
//  for_each(MapOfDependencies, UpdateMapChecker(redo));
  // Update a map of references.
  if ( !redo ) return;
  // return if nothing has been touched. Otherwise do the actual update.
//  touch()
  // Touch if anything has changed.
}

inline void ShowerHandler::doinit() throw(InitException) {
  CascadeHandler::doinit();
}

inline void ShowerHandler::dofinish() {
  CascadeHandler::dofinish();
}

inline void ShowerHandler::doinitrun() {
  CascadeHandler::doinitrun();
}

inline void ShowerHandler::rebind(const TranslationMap & trans)
  throw(RebindException) {
  // dummy = trans.translate(dummy);
  CascadeHandler::rebind(trans);
}

inline IVector ShowerHandler::getReferences() {
  IVector ret = CascadeHandler::getReferences();
  // ret.push_back(dummy);
  return ret;
}

inline tTimeShowerPtr ShowerHandler::timeShower() const {
  return theTimeShower;
}

inline tSpaceShowerPtr ShowerHandler::spaceShower() const {
  return theSpaceShower;
}

}
