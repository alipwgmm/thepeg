// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the Emitter class.
//

namespace Ariadne {

inline Emitter::Emitter()
  : theLastPT2(0.0*GeV2), theEType(0), theAlpha0(0.0),
    theLambdaQCD2(0.0*GeV2), theMaxScale(-1.0*GeV2) {}

inline Emitter::Emitter(const Emitter & x)
  : CascadeBase(x), theLastPT2(x.theLastPT2), theEType(0),
    theAlpha0(x.theAlpha0), theLambdaQCD2(x.theLambdaQCD2), theMECorr(x.theMECorr),
    theMaxScale(x.theMaxScale), genVar(x.genVar) {}

inline Emitter::~Emitter() {
  if ( theEType ) delete theEType;
}

inline Energy2 Emitter::lastPT2() const {
  return theLastPT2;
}

inline void Emitter::lastPT2(Energy2 x) {
  theLastPT2 = x;
}

inline double Emitter::alpha0() const {
  return theAlpha0;
}

inline Energy2 Emitter::lambdaQCD2() const {
  return theLambdaQCD2;
}

inline Emitter::DipoleStateVector Emitter::constructStep(){
  DipoleStateVector vec;
  return vec;
}

inline double Emitter::emissionProbability(){
  return 0.0;
}

inline double Emitter::coupling(){
  return 0.0;
}

inline double Emitter::PDFRatio(){
  return 1.0;
}

inline tcMECPtr Emitter::MECorr() const {
  return theMECorr;
}

inline void Emitter::removeMECorr() {
  theMECorr = tcMECPtr();
}

inline void Emitter::fillReferences(CloneSet & cset) const {
  CascadeBase::fillReferences(cset);
}

inline void Emitter::rebind(const TranslationMap & trans) {
  CascadeBase::rebind(trans);
}

inline Energy2 Emitter::maxScale() const {
  return theMaxScale;
}

inline void Emitter::maxScale(Energy2 x) {
  theMaxScale = x;
}

}
