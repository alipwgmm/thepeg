// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the Emitter class.
//

namespace DIPSY {

  inline Emitter::Emitter(): 
    testingPS(false), fixY(0.0), thePSInflation(1.0), thePMinusOrdering(1.0),
    thePTScale(1.0), theRScale(1.0*InvGeV), theRMax(0.0*InvGeV),
    theBothOrderedEvo(true), theBothOrderedInt(true), theBothOrderedFS(true),
    theRangeMode(0),theMinusOrderingMode(0), thestMode(false) {}

inline IBPtr Emitter::clone() const {
  return new_ptr(*this);
}

inline IBPtr Emitter::fullclone() const {
  return new_ptr(*this);
}

inline double Emitter::alphaBar(InvEnergy r) const{
  return alphaS(r)*3.0/M_PI;
}

inline double Emitter::pTScale() const{
  return thePTScale;
}

inline void Emitter::rScale(InvEnergy rScale) {
  theRScale = rScale;
}

inline void Emitter::PSInflation(double PSInflation) {
  thePSInflation = PSInflation;
}

inline double Emitter::PSInflation() const {
  return thePSInflation;
}

inline void Emitter::PMinusOrdering(double x) {
  thePMinusOrdering = x;
}

inline double Emitter::PMinusOrdering() const {
  return thePMinusOrdering;
}

// If needed, insert default implementations of virtual function defined
// in the InterfacedBase class here (using ThePEG-interfaced-impl in Emacs).


}
