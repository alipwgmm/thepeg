// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the VirtualPhoton class.
//

namespace DIPSY {

inline VirtualPhoton::VirtualPhoton()
  : theQ2(0.0*GeV2), theShrinkR(0.0*InvGeV),thePolarisation(0),
    theVMDLightA(0.0), theVMDLightR(0.0*InvGeV),
    theVMDLightW(0.0*InvGeV), theVMDCharmA(0.0), theVMDCharmR(0.0*InvGeV),
    theVMDCharmW(0.0*InvGeV), rMax(ZERO), r2Psi2Int(ZERO), r2Psi2Max(ZERO) {}

inline VirtualPhoton::VirtualPhoton(const VirtualPhoton & x)
  : VectorMesonBase(x), theQ2(x.theQ2), theShrinkR(x.theShrinkR),
    thePolarisation(x.thePolarisation), theVMDLightA(x.theVMDLightA),
    theVMDLightR(x.theVMDLightR), theVMDLightW(x.theVMDLightW), theVMDCharmA(x.theVMDCharmA),
    theVMDCharmR(x.theVMDCharmR), theVMDCharmW(x.theVMDCharmW), rMax(x.rMax),
    r2Psi2Int(x.r2Psi2Int), r2Psi2Max(x.r2Psi2Max) {}

inline IBPtr VirtualPhoton::clone() const {
  return new_ptr(*this);
}

inline IBPtr VirtualPhoton::fullclone() const {
  return new_ptr(*this);
}

inline Energy2 VirtualPhoton::Q2() const {
  return theQ2;
}

// If needed, insert default implementations of virtual function defined
// in the InterfacedBase class here (using ThePEG-interfaced-impl in Emacs).


}
